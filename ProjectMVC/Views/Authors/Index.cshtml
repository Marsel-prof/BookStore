@model IEnumerable<ProjectMVC.ViewModels.Author.AuthorVM>

@{
    ViewData["Title"] = "Index";
}
@section Title {Authors}
@section SubTitle {Show}
@section Buttons {
    <a asp-controller="Authors" asp-action="Create" class="btn btn-primary">Create</a>
}
@if (!Model.Any())
{
    <div class="card-body">
        <div class="alert alert-warning alert-dismissible">
            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
            <h5><i class="icon fas fa-exclamation-triangle"></i> Alert!</h5>
            There are no Authors.
        </div>
    </div>
}
else
{
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary">Edit</a>  |
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info">Details</a>  |
                <a href="#" data-id="@item.Id" class="btn btn-danger js-delete">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
}
@section Scripts {
    <script>
        document.querySelectorAll('.js-delete').forEach((btn) => {
            btn.addEventListener('click', async () => {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        const id = btn.dataset.id;
                        const response = await fetch(`/Authors/Delete/${id}`, {
                            method: "POST"
                        });
                        if (response.ok) {
                            btn.closest('tr').remove();

                            const Toast = Swal.mixin({
                                toast: true,
                                position: 'top-end',
                                showConfirmButton: false,
                                timer: 3000,
                                timerProgressBar: true,
                            });
                            Toast.fire({
                                icon: 'success',
                                title: 'Author Deleted Succesfully',
                            });
                        }
                    }
                });

            })
        })

    </script>
}